self.addEventListener("install", (event) => {
    event.waitUntil(
        caches.open("offline").then((cache) => {
            cache.addAll([
                "/app/",
                "/app/settings/",
                "/app/?gethtml=settings",
                "/app/camera/",
                "/app/localstorage/",
                "/app/myuploads/",
                "/getuploadlimitsini.php",
                // /styles
                "/styles/camera.css",
                "/styles/hiddencamera.css",
                "/styles/index.css",
                "/styles/index0.css",
                "/styles/index1.css",
                "/styles/loader.css",
                "/styles/localstorage.css",
                "/styles/maps.css",
                "/styles/myuploads.css",
                "/styles/settings.css",
                // /scripts
                "/scripts/camera.js",
                "/scripts/hiddencamera.js",
                "/scripts/index.js",
                "/scripts/localstorage.js",
                "/scripts/maps.js",
                "/scripts/myuploads.js",
                "/scripts/settings.js",
                // /images
                "/images/blackimage.svg",
                "/images/cache.svg",
                "/images/camera.svg",
                "/images/code.svg",
                "/images/colorfilter.svg",
                "/images/copy.svg",
                "/images/currentlocation.svg",
                "/images/darkmode0.png",
                "/images/darkmode1.png",
                "/images/description.svg",
                "/images/detectinglocation.svg",
                "/images/disabledmicrophone.svg",
                "/images/download.svg",
                "/images/emergency.svg",
                "/images/emergencymodeps.svg",
                "/images/exitfullscreen.svg",
                "/images/flash0.svg",
                "/images/flash1.svg",
                "/images/flashlight0.svg",
                "/images/flashlight1.svg",
                "/images/fullscreen.svg",
                "/images/hiddencamera.svg",
                "/images/homepage.svg",
                "/images/initialization.svg",
                "/images/language.svg",
                "/images/leaving.svg",
                "/images/link.svg",
                "/images/live.svg",
                "/images/livestreamps.svg",
                "/images/location.svg",
                "/images/locationhighaccuracy.svg",
                "/images/locationmarker.svg",
                "/images/maps.svg",
                "/images/microphone.svg",
                "/images/multiple.svg",
                "/images/myuploads.svg",
                "/images/newtab.svg",
                "/images/nolocation.svg",
                "/images/offline.svg",
                "/images/open.svg",
                "/images/pedestriansos.svg",
                "/images/pedestriansos_16.png",
                "/images/pedestriansos_64.png",
                "/images/pedestriansos_256.png",
                "/images/photo.svg",
                "/images/photovideo.svg",
                "/images/public.svg",
                "/images/record_video.svg",
                "/images/recordvideops.svg",
                "/images/retry.svg",
                "/images/rotate.svg",
                "/images/save.svg",
                "/images/scroll.svg",
                "/images/securityps.svg",
                "/images/settings.svg",
                "/images/share.svg",
                "/images/submit.svg",
                "/images/take_photo.svg",
                "/images/timezone.svg",
                "/images/undeletable.svg",
                "/images/uploadicon.svg",
                "/images/video.svg",
                "/images/viewicon.svg",
                "/images/viewmore.svg",
                "/images/waitinglocation.svg",
                "/images/pictureinpicture.svg",
                "/images/localstorage.svg",
                "/images/delete.svg"
            ]);
        })
    );
});
self.addEventListener("fetch", (event) => {
    event.respondWith(
        caches.match(event.request).then((response) => {
            return response || fetch(event.request);
        })
    );
});